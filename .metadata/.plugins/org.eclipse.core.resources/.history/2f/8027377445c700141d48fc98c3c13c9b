package jumpingalien.part1.facade;


import jumpingalien.util.ModelException;
import jumpingalien.model.Mazub;
import jumpingalien.util.Sprite;


public class Facade implements IFacade {
	
	
	//throws ModelException {
	//	if (( ! isValidPosition(pixelLeftX, pixelBottomY))  || (! isValidSprite(sprites)))
	//	throw new ModelException(null, IllegalPositionException(pixelLeftX,pixelBottomY));
	
	public Mazub createMazub(int pixelLeftX, int pixelBottomY, Sprite[] sprites){
//	throws ModelException {
//		if (  )
//			throw new ModelException("error");
	return new Mazub(pixelLeftX, pixelBottomY,sprites);
	}
		
	
	public int[] getLocation(Mazub alien) {
		return alien.getLocation();
	}

	 
	public double[] getVelocity(Mazub alien) {
		return alien.getVelocity();
	}

	 
	public double[] getAcceleration(Mazub alien) {
		return alien.getAcceleration();
	}

	 
	public int[] getSize(Mazub alien) {
		return alien.getSize();
	}

	 
	public Sprite getCurrentSprite(Mazub alien) {
		return alien.getCurrentSprite();
	}

	 
	public void startJump(Mazub alien) {
		alien.startJump();
		
	}

	 
	public void endJump(Mazub alien) {
		alien.endJump();
	}

	 
	public void startMoveLeft(Mazub alien) {
		alien.startMoveLeft();
	}

	 
	public void endMoveLeft(Mazub alien) {
		alien.endMove();
	}

	 
	public void startMoveRight(Mazub alien) {
		alien.startMoveRight();
	}

	 
	public void endMoveRight(Mazub alien) {
		alien.endMove();		
	}

	 
	public void startDuck(Mazub alien) {
		alien.startDuck();
	}

	 
	public void endDuck(Mazub alien) {
		alien.endDuck();
	}

	 
	public void advanceTime(Mazub alien, double dt) {
		alien.advanceTime(dt);
	}

	public boolean isValidPosition(Mazub alien) {
		return alien.isValidPosition();
	}
	
	public boolean isValidSprite(Sprite[] sprites) {
		return ((sprites.length >= 8) && (sprites.length % 2 == 0));
	}

}
