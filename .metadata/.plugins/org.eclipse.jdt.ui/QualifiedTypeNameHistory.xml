<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="jumpingalien.model.IllegalDtException"/>
<fullyQualifiedTypeName name="jumpingalien.util.Sprite"/>
<fullyQualifiedTypeName name="jumpingalien.model.IllegalSpriteException"/>
<fullyQualifiedTypeName name="jumpingalien.model.IllegalSpeedException"/>
<fullyQualifiedTypeName name="jumpingalien.util.ModelException"/>
<fullyQualifiedTypeName name="jumpingalien.model.IllegalPositionException"/>
<fullyQualifiedTypeName name="jumpingalien.model.IllegalInitStartSpeedException"/>
<fullyQualifiedTypeName name="jumpingalien.model.IllegalMaxSpeedException"/>
<fullyQualifiedTypeName name="be.kuleuven.cs.som.annotate.Basic"/>
<fullyQualifiedTypeName name="be.kuleuven.cs.som.annotate.Immutable"/>
<fullyQualifiedTypeName name="be.kuleuven.cs.som.annotate.Raw"/>
<fullyQualifiedTypeName name="java.lang.Math"/>
<fullyQualifiedTypeName name="jumpingalien.model.Plant"/>
<fullyQualifiedTypeName name="jumpingalien.model.Orientation"/>
<fullyQualifiedTypeName name="jumpingalien.model.School"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="jumpingalien.part3.programs.IProgramFactory"/>
<fullyQualifiedTypeName name="jumpingalien.model.DoubleOperation"/>
<fullyQualifiedTypeName name="jumpingalien.model.DoubleExpression.DoubleOperation"/>
<fullyQualifiedTypeName name="jumpingalien.model.UnaryExpression"/>
<fullyQualifiedTypeName name="jumpingalien.model.Expression"/>
<fullyQualifiedTypeName name="jumpingalien.model.GameObject"/>
<fullyQualifiedTypeName name="jumpingalien.model.SuperObject"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.junit.Test"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.util.concurrent.CopyOnWriteArrayList"/>
<fullyQualifiedTypeName name="jumpingalien.part3.facade.IFacadePart3"/>
<fullyQualifiedTypeName name="java.beans.Expression"/>
<fullyQualifiedTypeName name="program.Program"/>
<fullyQualifiedTypeName name="program.expression.BinaryExpression"/>
<fullyQualifiedTypeName name="program.statement.BreakStatement"/>
<fullyQualifiedTypeName name="program.statement.LoopStatement"/>
<fullyQualifiedTypeName name="program.statement.ForEachStatement"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.Multiplication"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.Division"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.Subtraction"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.Equals"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.GreaterThan"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.LessThan"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.GreaterEquals"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.LessEquals"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.NotEquals"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.BoolTrue"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.AndBool"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.OrBool"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.RandomDouble"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.ObjectSelf"/>
<fullyQualifiedTypeName name="jumpingalien.model.Mazub"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.BoolFalse"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.DirectionExpression"/>
<fullyQualifiedTypeName name="jumpingalien.part3.programs.IProgramFactory.Direction"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.ObjectNull"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.GetHeightObject"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.SearchObject"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.GetHpObject"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.GetX"/>
<fullyQualifiedTypeName name="jumpingalien.model.program.expression.IsJumping"/>
</qualifiedTypeNameHistroy>
